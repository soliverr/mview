--
-- Install MVIEW_BASE
--

prompt
prompt I: Start installation
prompt

--
-- Load ORADBA schema variables
@@confdir@/schema-define
--
-- Load package variables
@@confdir@/@PACKAGE_NAME@-base-define

--
-- Create role
prompt
prompt I: Cretating role &&MVIEW_BASE_ROLE_NAME
prompt

@@datadir@/create_role

prompt
prompt I: Setting grants ...
prompt

-- System privileges for role 
grant select on sys.dba_jobs to &&MVIEW_BASE_ROLE_NAME;
-- System grants
grant select on sys.dba_tab_privs to &&MVIEW_BASE_SCHEMA_OWNER;

set echo off
spool @spooldir@/@PACKAGE_NAME@.sql

declare
  cur$action integer := sqlinstaller.ACTION_MODIFY;
  cur$owner  sys.all_users.username%type := '&&MVIEW_BASE_SCHEMA_OWNER' ;
  cur$cfg    sqlinstaller_config_type;
begin
  -- By default all actions are enabled
  cur$cfg := sqlinstaller_config_type( NULL, NULL,
                                       sqlinstaller.action_any, sqlinstaller.enabled );

  dbms_output.put_line( CHR(10) || '-- START ACTION --' );
  dbms_output.put_line( 'set verify off' );
  dbms_output.put_line( '--' );
  dbms_output.put_line( 'define ORA_SCHEMA_OWNER = ' || cur$owner );
  dbms_output.put_line( '-- Set owner schema' );
  dbms_output.put_line( 'alter session set current_schema = ' || cur$owner || ';' );
  dbms_output.put_line( 'prompt' );
  dbms_output.put_line( 'prompt I: Current schema is ' || cur$owner );
  dbms_output.put_line( 'prompt' );

  --
  -- Create tables and idexes
  dbms_output.put_line( 'prompt' );
  dbms_output.put_line( 'prompt I: Creating base tables ...' );

  cur$cfg.object_name := cur$owner||'.refresh_groups';
  cur$cfg.object_type := sqlinstaller.p_table;
  sqlinstaller.cfg_set( cur$cfg );
  sqlinstaller.do_table( cur$action, cur$owner||'.refresh_groups', '@@datadir@/tables/create_refresh_groups' );
  cur$cfg.object_name := cur$owner||'.mviews';
  cur$cfg.object_type := sqlinstaller.p_table;
  sqlinstaller.cfg_set( cur$cfg );
  sqlinstaller.do_table( cur$action, cur$owner||'.mviews', '@@datadir@/tables/create_mviews' );
  cur$cfg.object_name := cur$owner||'.mviews_exclude_idx';
  cur$cfg.object_type := sqlinstaller.p_table;
  sqlinstaller.cfg_set( cur$cfg );
  sqlinstaller.do_table( cur$action, cur$owner||'.mviews_exclude_idx', '@@datadir@/tables/create_mviews_exclude_idx' );

  --
  -- Create packages
  dbms_output.put_line( 'prompt' );
  dbms_output.put_line( 'prompt I: Creating base packages ...' );

  cur$cfg.object_name := cur$owner||'.mview_base';
  cur$cfg.object_type := sqlinstaller.p_package;
  sqlinstaller.cfg_set( cur$cfg );
  cur$cfg.object_type := sqlinstaller.p_package_body;
  sqlinstaller.cfg_set( cur$cfg );
  sqlinstaller.do_package( cur$action, cur$owner||'.mview_base', '@@datadir@/packages/mview_base_def' );
  sqlinstaller.do_package_body( cur$action, cur$owner||'.mview_base', '@@datadir@/packages/mview_base_body' );

  dbms_output.put_line( 'alter session set current_schema = &&l_cur_schema;' );

  dbms_output.put_line( CHR(10) || '-- END ACTION --' );
end;
/
spool off

alter session set current_schema = &&l_cur_schema;

-- Execute generated install script
host sed --in-place '1, /^-- START ACTION --/d; /^-- END ACTION --/,$d' @spooldir@/@PACKAGE_NAME@.sql
@@spooldir@/@PACKAGE_NAME@.sql

-- Remove spool file
host rm -f @spooldir@/@PACKAGE_NAME@.sql

--
-- Create public synonyms
prompt
prompt I: Creating public synonyms ...
prompt

begin
  if sqlinstaller.chk_synonym( 'public.mview_base' ) = false then
   execute immediate
     'create or replace public synonym MVIEW_BASE for &&MVIEW_BASE_SCHEMA_OWNER..mview_base';
   dbms_output.put_line( 'I: Public synonym MVIEW_BASE created' );
  end if;

  if sqlinstaller.chk_synonym( 'public.mviews' ) = false then
    execute immediate
     'create or replace public synonym MVIEWS for &&MVIEW_BASE_SCHEMA_OWNER..mviews' ;
    dbms_output.put_line( 'I: Public synonym MVIEWS created' );
  end if;

  if sqlinstaller.chk_synonym( 'public.mviews_exclude_idx' ) = false then
    execute immediate
      'create or replace public synonym MVIEWS_EXCLUDE_IDX for &&MVIEW_BASE_SCHEMA_OWNER..mviews_exclude_idx';
    dbms_output.put_line( 'I: Public synonym MVIEWS_EXCLUDE_IDX created' );
  end if;

  if sqlinstaller.chk_synonym( 'public.refresh_groups' ) = false then
    execute immediate
      'create or replace public synonym REFRESH_GROUPS for &&MVIEW_BASE_SCHEMA_OWNER..refresh_groups';
    dbms_output.put_line( 'I: Public synonym REFRESH_GROUPS created' );
  end if;
end;
/

--
-- Grant right to role
grant select  on &&MVIEW_BASE_SCHEMA_OWNER..refresh_groups     to &&MVIEW_BASE_ROLE_NAME;
grant select  on &&MVIEW_BASE_SCHEMA_OWNER..mviews             to &&MVIEW_BASE_ROLE_NAME;
grant select  on &&MVIEW_BASE_SCHEMA_OWNER..mviews_exclude_idx to &&MVIEW_BASE_ROLE_NAME;
grant execute on &&MVIEW_BASE_SCHEMA_OWNER..mview_base       to &&MVIEW_BASE_ROLE_NAME;

alter session set current_schema = &&l_cur_schema;

prompt
prompt I: Finish installation
prompt
